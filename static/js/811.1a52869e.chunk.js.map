{"version":3,"file":"static/js/811.1a52869e.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","page/Contacts.jsx","redux/ContactFormHandlers.js","redux/ContactListHandlers.js","redux/FilterHandlers.js"],"sourcesContent":["// FilterSelectors.js\nimport { useSelector } from 'react-redux';\nexport const selectContacts = state => state.contacts;\n\nexport const useFilteredContacts = () => {\n  const selectContacts = useSelector(state => state.contacts);\n  const selectFilter = useSelector(state => state.filter);\n\n  return selectContacts.filter(contact => {\n    if (contact && contact.name) {\n      return contact.name.toLowerCase().includes(selectFilter.toLowerCase());\n    }\n    return false;\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_form\":\"ContactForm_contact_form__MxVfX\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addContact } from '../../redux/contactsSlice';\nimport { selectContacts } from '../../redux/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const name = formData.get('name');\n    const number = formData.get('number');\n\n    if (name.trim() === '' || number.trim() === '') {\n      alert('Please enter name and number.');\n      return;\n    }\n\n    const isNameExists = contacts.some(contact => contact.name === name);\n\n    if (isNameExists) {\n      alert(`Contact with name ${name} already exists!`);\n      return;\n    }\n\n    dispatch(addContact({ id: nanoid(), name, number }));\n    e.target.reset();\n  };\n\n  return (\n    <form className={css.contact_form} onSubmit={handleSubmit}>\n      <label>\n        Name:\n        <input className={css.form_name} type=\"text\" name=\"name\" required />\n      </label>\n      <label>\n        Number:\n        <input type=\"tel\" name=\"number\" required />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactlist_btn\":\"ContactList_contactlist_btn__zTnCN\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contactsSlice';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts);\n  const filter = useSelector(state => state.filter);\n\n  const filteredContacts = contacts.filter(contact => {\n    // Add null check to prevent accessing properties of undefined\n    if (contact && contact.name) {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    }\n    return false;\n  });\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            className={css.contactlist_btn}\n            type=\"button\"\n            onClick={() => handleDeleteContact(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.filter}>\n      Find contacts by name:\n      <input type=\"text\" value={filter} onChange={handleChange} />\n    </label>\n  );\n};\n","// ContactsPage.jsx\nimport React from 'react';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useAddContactHandler } from '../redux/ContactFormHandlers';\nimport { useDeleteContactHandler } from '../redux/ContactListHandlers';\nimport { useChangeFilterHandler } from '../redux/FilterHandlers';\nimport { useFilteredContacts } from '../redux/selectors';\n\nconst ContactsPage = () => {\n  const addContactHandler = useAddContactHandler();\n  const deleteContactHandler = useDeleteContactHandler();\n  const changeFilterHandler = useChangeFilterHandler();\n  const filteredContacts = useFilteredContacts();\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContactHandler} />\n      <h2>Contacts</h2>\n      <Filter onChange={changeFilterHandler} />\n      <ContactList\n        contacts={filteredContacts}\n        onDeleteContact={deleteContactHandler}\n      />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from './contactsSlice';\n\nexport const useAddContactHandler = () => {\n  const dispatch = useDispatch();\n\n  return contact => {\n    dispatch(addContact(contact));\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from './contactsSlice';\n\nexport const useDeleteContactHandler = () => {\n  const dispatch = useDispatch();\n\n  return contactId => {\n    dispatch(deleteContact(contactId));\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from './filterSlice';\n\nexport const useChangeFilterHandler = () => {\n  const dispatch = useDispatch();\n\n  return e => {\n    dispatch(setFilter(e.target.value));\n  };\n};\n"],"names":["selectContacts","state","contacts","ContactForm","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","e","preventDefault","formData","FormData","target","name","get","number","trim","some","contact","alert","concat","addContact","id","nanoid","reset","children","_jsx","type","required","ContactList","filter","filteredContacts","toLowerCase","includes","map","onClick","contactId","deleteContact","Filter","value","onChange","setFilter","addContactHandler","useAddContactHandler","deleteContactHandler","useDeleteContactHandler","changeFilterHandler","useChangeFilterHandler","selectFilter","useFilteredContacts","_Fragment","onDeleteContact"],"sourceRoot":""}